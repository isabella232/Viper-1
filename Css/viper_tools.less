.Viper-button {
    position: relative;
    border-radius: 0.3em;
    cursor: pointer;
    display: inline-block;
    font-size: 1.6em;
    line-height: 1.7em;
    margin-left: 0.3em;
    min-width: 1em;
    padding: 0 0.5em;
    text-align: center;
    
    &:first-child {
        margin-left: 0;
    }
    &.disabled {
        opacity: 0.3;
    }
}

/* Button Groups */

.Viper-buttonGroup {
    display: inline-block;
    margin-left: 0.6em;
}

.Viper-buttonGroup:first-child {
    margin-left: 0;
}

.Viper-buttonGroup .Viper-button {
    border-radius: 0;
    margin: 0;
}

.Viper-buttonGroup .Viper-button:first-child {
    border-top-left-radius: 0.3em;
    border-bottom-left-radius: 0.3em;
}

.Viper-buttonGroup .Viper-button:last-child {
    border-top-right-radius: 0.3em;
    border-bottom-right-radius: 0.3em;
}

/* Theme - Dark Grey */

.themeDark .Viper-button,
.themeDark .Viper-button.disabled:hover {
    background-color: #dadade;
    border: none;
    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.3), 0 1px 0 rgba(255, 255, 255, 0.9) inset;
    background: -webkit-gradient(linear, left top, left bottom, from(#e9e9eb), to(#c9c9d0));
    background: -moz-linear-gradient(top,  #e9e9eb,  #c9c9d0);
/*     -ms-filter: "progid:DXImageTransform.Microsoft.gradient (GradientType=0, startColorstr=#e9e9eb, endColorstr=#c9c9d0)"; */    
}

.themeDark .Viper-button:hover {
    background: #c9c9cd;
    background: -webkit-gradient(linear, left top, left bottom, from(#d8d8da), to(#b8b8ca));
    background: -moz-linear-gradient(top,  #c8c8c9,  #a8a8b9);
    text-shadow: 0 1px 0 rgba(255,255,255,0.5);
}

.themeDark .Viper-button:active,
.themeDark .Viper-button.active,
.themeDark .Viper-button.active:hover,
.themeDark .Viper-button.selected,
.themeDark .Viper-button.selected:hover {
    color: #FFF;
    text-shadow: 0 -1px 0 rgba(0,0,0,0.5);
    box-shadow: 0 0 0.2em rgba(0, 0, 0, 0.85) inset;
}

.themeDark .Viper-button.active,
.themeDark .Viper-button.active:hover {
    background: #2d73d2;
    background: -webkit-gradient(linear, left top, left bottom, from(#3987f2), to(#205caf));
    background: -moz-linear-gradient(top,  #3987f2,  #205caf);
}

.themeDark .Viper-button:active,
.themeDark .Viper-button.selected,
.themeDark .Viper-button.selected:hover {
    background: #54535A;
    border-color: #555;
}

.themeDark .Viper-buttonGroup .Viper-button,
.themeDark .Viper-buttonGroup .Viper-button.disabled:hover {
    border-left: 1px solid #898989;
}

.themeDark .Viper-buttonGroup .Viper-button:first-child,
.themeDark .Viper-buttonGroup .Viper-button.active,
.themeDark .Viper-buttonGroup .Viper-button.selected,
.themeDark .Viper-buttonGroup .Viper-button.disabled:first-child:hover {
    border-left: none;
}

/* Theme - Light Grey */

.themeLight .Viper-button,
.themeLight .Viper-button.disabled:hover {
    background-color: #dadade;
    border: 1px solid #AAA;
    box-shadow: 0 1px 0 rgba(255,255,255,0.95) inset;
    background: -webkit-gradient(linear, left top, left bottom, from(#e9e9eb), to(#c9c9d0));
    background: -moz-linear-gradient(top,  #e9e9eb,  #c9c9d0);
}

.themeLight .Viper-button:hover {
    background-color: #c9c9cd;
    background: -webkit-gradient(linear, left top, left bottom, from(#d8d8da), to(#b8b8c0));
    background: -moz-linear-gradient(top,  #d8d8da,  #b8b8c0);
}

.themeLight .Viper-button:active,
.themeLight .Viper-button.active,
.themeLight .Viper-button.active:hover,
.themeLight .Viper-button.selected,
.themeLight .Viper-button.selected:hover {
    color: #FFF;
    text-shadow: 0 -1px 0 rgba(0,0,0,0.5);
    box-shadow: 0 0 0.2em 0 rgba(0, 0, 0, 0.6) inset;
}

.themeLight .Viper-button:active,
.themeLight .Viper-button.selected,
.themeLight .Viper-button.selected:hover {
    background: #888;
    border-color: #555;
}

.themeLight .Viper-button.active,
.themeLight .Viper-button.active:hover,
.themeLight .Viper-button.active.selected,
.themeLight .Viper-button.active.selected:hover {
    background: #5a8bd0;
    border-color: #2e568d;
}

.themeLight .Viper-buttonGroup .Viper-button {
    border-left-width: 0;
}

.themeLight .Viper-buttonGroup .Viper-button:first-child {
    border-left-width: 1px;
}

/* Buttons */

// Text button tweaks

.Viper-button.bold {
    font-weight: bold;
}
.Viper-button.italic {
    font-style: italic;
    font-family: Georgia, Arial;
}
.Viper-button.underline {
    text-decoration: underline;
}

// Button Vars

@iconSpriteLocation: 1;
@iconWidth: 25px;
@iconHeight: 20px;
@iconHeightOffset: 27px;
@bgY: 0;
@bgY-activeOffset: 33px;
@bgX: -(@iconSpriteLocation - 1) * @iconHeightOffset;

// Icon container defaults

.buttonIcon {
    position: absolute;
    width: @iconWidth;
    height: @iconHeight;
    left: 50%;
    top: 50%;
    margin: -(@iconHeight / 2) 0 0 -(@iconWidth / 2);
    background-image: url(../Images/buttonIcons.png);
    
// Icon definitions
    
    // Merge Up
    &.mergeUp {
        .icon (1);
    }
    // Merge Down
    &.mergeDown {
        .icon (2);
    }
    // Delete
    &.delete {
        .icon (3);
    }
    // Add Above
    &.addAbove {
        .icon (4);
    }
    // Add Below
    &.addBelow {
        .icon (5);
    }
    // Merge Left
    &.mergeLeft {
        .icon (6);
    }
    // Arrow Right
    &.mergeRight {
        .icon (7);
    }
    // Split Horiz
    &.splitHoriz {
        .icon (8);
    }
    // Split Vert
    &.splitVert {
        .icon (9);
    }
    // Move
    &.move {
        .icon (10);
    }
    // Add Left
    &.addLeft {
        .icon (11);
    }
    // Add Right
    &.addRight {
        .icon (12);
    }
    // Split & Merge
    &.splitMerge {
        .icon (13);
    }
    // TD Heading Checker
    &.headingCheck {
        .icon (14);
    }
    // TH Abbreviation
    &.headerAbbr {
        .icon (15);
    }
    // CSS Class
    &.cssClass {
        .icon (16);
    }
    // Anchor / ID
    &.anchorID {
        .icon (17);
    }
    
} // End .buttonIcon

// Button state bundle with icon selection, declared after all the buttons so their icon variables are used instead of the defaults

.icon (@iconCount) {
    @iconSpriteLocation: @iconCount;
    background-position: @bgY @bgX;
    .Viper-button:active &,
    .Viper-button.active &,
    .Viper-button.selected & {
        background-position: -@bgY-activeOffset @bgX;
    }
}